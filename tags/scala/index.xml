<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Scala on Nikaeraintokyo.</title>
    <link>https://nikaera.com/tags/scala/</link>
    <description>Recent content in Scala on Nikaeraintokyo.</description>
    <image>
      <title>Nikaeraintokyo.</title>
      <url>https://nikaera.com/cover_image.jpg</url>
      <link>https://nikaera.com/cover_image.jpg</link>
    </image>
    <generator>Hugo -- 0.148.0</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 15 Mar 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nikaera.com/tags/scala/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>📔 Gatling で複数ユーザ認証した情報を元に負荷テストする</title>
      <link>https://nikaera.com/archives/gatling-multiuser/</link>
      <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://nikaera.com/archives/gatling-multiuser/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;
&lt;p&gt;今までは &lt;a href=&#34;https://jmeter.apache.org/&#34;&gt;JMeter&lt;/a&gt; でしか負荷テストを行ったことなかったのですが、最近 PlayFab で CloudFunction の負荷テストを行う際に &lt;a href=&#34;https://gatling.io/&#34;&gt;Gatling&lt;/a&gt; を初めて利用しました。&lt;/p&gt;
&lt;p&gt;今回の負荷テストでは、各ユーザ毎のレートリミットの制限等も考慮した実利用時を想定した形で行うことが要求されたため、単一ユーザの認証情報を使い回すことは望ましくないと考えました。そこで、複数の認証済みユーザの情報を元に &lt;a href=&#34;https://docs.microsoft.com/ja-jp/gaming/playfab/features/automation/cloudscript-af/&#34;&gt;PlayFab の CloudFunction&lt;/a&gt; の負荷テストを実施したのですが、若干実装に苦戦したため手順について記事として残しておくことにしました。&lt;/p&gt;
&lt;p&gt;また、本記事では Gatling のセットアップから記載していますが、該当コードやその説明を早く見たいという方は &lt;a href=&#34;https://nikaera.com/archives/gatling-multiuser/#%e8%a4%87%e6%95%b0%e3%83%a6%e3%83%bc%e3%82%b6%e8%aa%8d%e8%a8%bc%e3%82%92%e8%a1%8c%e3%81%86%e3%83%86%e3%82%b9%e3%83%88%e3%82%b7%e3%83%8a%e3%83%aa%e3%82%aa%e3%82%92%e5%ae%9f%e8%a3%85%e3%81%99%e3%82%8b&#34;&gt;&lt;code&gt;複数ユーザ認証を行うテストシナリオを実装する&lt;/code&gt;&lt;/a&gt; 項目をご参照ください。&lt;/p&gt;
&lt;h1 id=&#34;動作環境&#34;&gt;動作環境&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;macOS Big Sur&lt;/li&gt;
&lt;li&gt;Java OpenJDK 12.0.1
&lt;ul&gt;
&lt;li&gt;未インストールの方は事前に &lt;a href=&#34;https://jdk.java.net/&#34;&gt;公式サイトから&lt;/a&gt; OpenJDK をインストールしてください&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;gatling-の環境を整える&#34;&gt;Gatling の環境を整える&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Gatling には 2 種類のセットアップ方法が用意されています。&lt;/strong&gt; スタンドアローンなツールを直接公式サイトからダウンロードするか、&lt;a href=&#34;https://maven.apache.org/&#34;&gt;Maven&lt;/a&gt; や &lt;a href=&#34;https://www.scala-sbt.org/&#34;&gt;sbt&lt;/a&gt; といったツール経由でダウンロードするか選択できます。&lt;/p&gt;
&lt;p&gt;どちらの方法でセットアップするかについてですが、&lt;strong&gt;新規でテストケースを Gatling で書いていく用途だと前者になり、既存のプロジェクトに Gatling を取り込む用途だと後者になるかと存じます。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本記事では、前者のスタンドアローンなツールを直接公式サイトからダウンロードする方法で Gatling の環境をセットアップします。&lt;/p&gt;
&lt;h2 id=&#34;公式サイトから-gatling-をダウンロードする&#34;&gt;公式サイトから Gatling をダウンロードする&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://gatling.io/open-source/&#34;&gt;Gatling のトップページ&lt;/a&gt; に遷移して、ページを &lt;code&gt;2 Ways to use Gatling&lt;/code&gt; の項目までスクロールした後、ダウンロードボタンをクリックします。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;スクリーンショット 2021-03-14 21.57.35.png&#34; loading=&#34;lazy&#34; src=&#34;https://i.gyazo.com/0bbfb36fa7ea0704d4ebc50682f836ef.png&#34;&gt;
&lt;strong&gt;&lt;code&gt;DOWNLOAD GATLING&#39;S BUNDLE&lt;/code&gt; にある &lt;code&gt;DOWNLOAD NOW&lt;/code&gt; ボタンをクリックする&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ファイルダウンロード後はダウンロードした zip ファイルを適当なフォルダに展開して配置します。
早速ターミナルで展開したフォルダ内にある &lt;code&gt;./bin/gatling.sh&lt;/code&gt; を実行して、正常にコマンドが実行できるか確認してみます。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
