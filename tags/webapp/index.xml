<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>webapp on Nikaeraintokyo.</title>
    <link>https://nikaera.com/tags/webapp/</link>
    <description>Recent content in webapp on Nikaeraintokyo.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 10 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nikaera.com/tags/webapp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>📔 ブログを書く用途に特化した Gyazo のツールを開発してみた</title>
      <link>https://nikaera.com/archives/bloggimg-first-release/</link>
      <pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nikaera.com/archives/bloggimg-first-release/</guid>
      <description>はじめに いつもブログ記事に載せるキャプチャ画像の編集 &amp;amp; アップロード先として Gyazo を利用させていただいているのですが、日々使っている中で不満に感じる点もちょくちょく出てくるようになってきました。
そのため、3連休を用いて Rust の勉強がてら Bloggimg というウェブアプリケーションを作ってみました。ソースコードは後ほど GitHub のリポジトリにアップ予定です。
開発中に得た知見等については別途技術記事として書いて残す予定です。
目的 今回 Bloggimg の開発で目的としていた点は下記になります。
 画像の編集ツールは引き続き Gyazo に用意されているものを使う  既に最高に使いやすい 👑   キャプチャ画像をアップロードする際に、自動的に特定のコレクションに紐付けるようにする  技術記事毎にコレクションを分けて管理しているため、技術記事を書いている最中にアップするキャプチャ画像は全て特定のコレクションにまとまっていて欲しい   ワークスペースのようなツールを目指し、ブログを書く時だけに使える機能を開発する  例えば、ワンクリックで画像マークダウンの記述がコピーできたり、画像のアップロードをし直しやすくするため画像削除がお手軽に出来るよう削除ボタンに即アクセス出来るようにしたり&amp;hellip;    特にアップした画像を 自動的に特定のコレクションに紐付けるようにする については本記事で紹介しているウェブアプリケーションを作成するキッカケとなった点なので外せない点でした。
使い方 Bloggimg の使い方についてご紹介いたします。
ログインする Bloggimg を利用するためには、まず Gyazo アカウントでログインして頂く必要がございます。トップページの右上にあるログインボタンから Gyazo アカウントでログインします。
1. トップページ右上に配置されたログインボタンから Gyazo アカウント認証を行う
2. Gyazo アカウント認証が正常に完了したら、再度トップページを開く
3. トップページを開いた時に Gyazo にアップした直近の画像が確認できるはずです
ログアウトする ウェブアプリケーションからログアウトするには、ログイン後にトップページ右上に表示される ログアウト ボタンをクリックすることでログアウトできます。
ログイン後にトップページ右上に表示される ログアウト ボタンをクリックしてログアウトする
画像ファイルをアップロードする 画像は一枚でも複数枚でもアップロードすることが可能です。画像アップロードの方法としてドラッグ &amp;amp; ドロップとファイル選択ダイアログを用意しております。</description>
    </item>
    
  </channel>
</rss>
